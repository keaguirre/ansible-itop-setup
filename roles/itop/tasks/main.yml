---
# ============================================
# ACTUALIZACION DEL SISTEMA
# ============================================

- name: Actualizar cache APT
  ansible.builtin.apt:
    update_cache: yes
    cache_valid_time: 3600
  retries: 5
  delay: 15
  register: apt_update
  until: apt_update is succeeded
  tags: ['install', 'update']

# ============================================
# INSTALACION DE APACHE Y PHP
# ============================================

- name: Paquetes base para manejar PPAs
  ansible.builtin.apt:
    name:
      - software-properties-common
      - ca-certificates
    state: present
  when: ansible_distribution_release in ['noble','mantic']
  tags: ['install']

- name: add PPA de Ondrej para PHP
  ansible.builtin.apt_repository:
    repo: ppa:ondrej/php
    state: present
    filename: ondrej-php
  when: ansible_distribution_release in ['noble','mantic']
  tags: ['install']

- name: apt update
  ansible.builtin.apt:
    update_cache: yes
  when: ansible_distribution_release in ['noble','mantic']
  tags: ['install']

- name: Instalar Apache, PHP-FPM {{ php_version }}, y utilidades
  ansible.builtin.apt:
    name:
      - apache2
      - libapache2-mod-fcgid
      - unzip
      - curl
      - graphviz
      - "php{{ php_version }}-fpm"
      - "php{{ php_version }}-mysql"
      - "php{{ php_version }}-cli"
      - "php{{ php_version }}-xml"
      - "php{{ php_version }}-gd"
      - "php{{ php_version }}-zip"
      - "php{{ php_version }}-curl"
      - "php{{ php_version }}-soap"
      - "php{{ php_version }}-mbstring"
      - "php{{ php_version }}-apcu"
      - "php{{ php_version }}-ldap"
      - "php{{ php_version }}-imap"
      - "php{{ php_version }}-intl"
    state: present
  tags: ['install']

- name: Habilitar módulos de Apache necesarios
  community.general.apache2_module:
    state: present
    name: "{{ item }}"
  loop:
    - proxy
    - proxy_fcgi
    - setenvif
    - headers
    - expires
    - rewrite
  notify: Restart Apache
  tags: ['config']

# ============================================
# CONFIGURACION DE PHP
# ============================================

- name: Ajustes PHP específicos para iTop
  ansible.builtin.template:
    src: php.ini.d-itop.ini.j2
    dest: "/etc/php/{{ php_version }}/fpm/conf.d/99-itop.ini"
    mode: "0644"
  notify: Restart PHP-FPM
  tags: ['config']

# ============================================
# VERIFICACION Y PREPARACION DE DIRECTORIOS
# ============================================

- name: Asegurar directorio base de iTop
  ansible.builtin.file:
    path: "{{ itop_web_root }}"
    state: directory
    owner: www-data
    group: www-data
    mode: "0755"
  tags: ['install']

# Señal de "código presente": índice público
- name: Verificar si ya existe el árbol web de iTop
  ansible.builtin.stat:
    path: "{{ itop_web_root }}/web/index.php"
  register: itop_web_present
  tags: ['install']

# Señal de "setup completado": existe config-itop.php
- name: Verificar si iTop ya está configurado (config-itop.php)
  ansible.builtin.stat:
    path: "{{ itop_web_root }}/web/conf/production/config-itop.php"
  register: itop_configured
  tags: ['install']

# Crear estructura para que el wizard pueda escribir config-itop.php
- name: Crear estructura de conf/production con permisos para www-data
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: www-data
    group: www-data
    mode: "0775"
  loop:
    - "{{ itop_web_root }}/web/conf"
    - "{{ itop_web_root }}/web/conf/production"
  tags: ['config', 'permissions']

# ============================================
# DESCARGA E INSTALACION DE ITOP
# ============================================

- name: Descargar iTop {{ itop_version }}
  ansible.builtin.get_url:
    url: "{{ itop_download_url }}"
    dest: /tmp/itop.zip
    mode: "0644"
    timeout: 120
    headers:
      User-Agent: ansible-itop-installer
  when: not itop_web_present.stat.exists
  tags: ['install']

- name: Descomprimir iTop en webroot
  ansible.builtin.unarchive:
    src: /tmp/itop.zip
    dest: "{{ itop_web_root }}"
    remote_src: true
    extra_opts: ["-q"]
    owner: www-data
    group: www-data
  when: not itop_web_present.stat.exists
  notify: Fix permissions
  tags: ['install']

- name: Limpiar archivo zip temporal
  ansible.builtin.file:
    path: /tmp/itop.zip
    state: absent
  when: not itop_web_present.stat.exists
  tags: ['install']

# ============================================
# CONFIGURACION DE APACHE
# ============================================

- name: VirtualHost para iTop (DocumentRoot -> {{ itop_web_root }}/web)
  ansible.builtin.template:
    src: itop-apache-vhost.conf.j2
    dest: /etc/apache2/sites-available/itop.conf
    mode: "0644"
  notify: Restart Apache
  tags: ['config']

# Habilitar itop.conf y deshabilitar default usando módulos
- name: Habilitar sitio itop.conf
  community.general.apache2_site:
    name: itop.conf
    state: enabled
  notify: Restart Apache
  tags: ['config']

- name: Deshabilitar sitio por defecto 000-default.conf
  community.general.apache2_site:
    name: 000-default.conf
    state: disabled
  notify: Restart Apache
  tags: ['config']

- name: Eliminar index.html que pueden tapar iTop
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  loop:
    - /var/www/html/index.html
    - "{{ itop_web_root }}/index.html"
    - "{{ itop_web_root }}/web/index.html"
  notify: Restart Apache
  tags: ['config']

# ============================================
# PERMISOS Y PROPIEDAD (100% módulos)
# ============================================

- name: Asegurar propietario www-data recursivo en árbol iTop
  ansible.builtin.file:
    path: "{{ itop_web_root }}"
    state: directory
    recurse: true
    owner: www-data
    group: www-data
    mode: "0755"
  notify: Fix permissions
  tags: ['config', 'permissions']

- name: Encontrar directorios bajo itop_web_root
  ansible.builtin.find:
    paths: "{{ itop_web_root }}"
    file_type: directory
  register: itop_dirs
  tags: ['permissions']

- name: Permisos 0755 en directorios
  ansible.builtin.file:
    path: "{{ item.path }}"
    mode: "0755"
  loop: "{{ itop_dirs.files }}"
  loop_control:
    label: "{{ item.path }}"
  tags: ['permissions']

- name: Encontrar archivos bajo itop_web_root
  ansible.builtin.find:
    paths: "{{ itop_web_root }}"
    file_type: file
  register: itop_files
  tags: ['permissions']

- name: Permisos 0644 en archivos
  ansible.builtin.file:
    path: "{{ item.path }}"
    mode: "0644"
  loop: "{{ itop_files.files }}"
  loop_control:
    label: "{{ item.path }}"
  tags: ['permissions']

# ============================================
# MARKER PARA PROVISION / MONITOREO
# ============================================

- name: Crear marker de provisión en EFS
  ansible.builtin.copy:
    dest: "{{ itop_web_root }}/.itop_provisioned"
    content: "provisioned at {{ ansible_date_time.iso8601 }}"
    owner: www-data
    group: www-data
    mode: "0644"
  when: itop_web_present.stat.exists
  tags: ['info']

# ============================================
# INICIAR SERVICIOS
# ============================================

- name: Iniciar y habilitar servicios
  ansible.builtin.service:
    name: "{{ item }}"
    state: started
    enabled: yes
  loop:
    - "php{{ php_version }}-fpm"
    - apache2
  tags: ['service']

# ============================================
# INFORMACION FINAL
# ============================================

- name: Mostrar información de acceso
  ansible.builtin.debug:
    msg: >-
      {{
        [
          "================================================",
          "iTop desplegado correctamente",
          "================================================",
          itop_configured.stat.exists
            | ternary(
                "URL: http://" ~ ansible_default_ipv4.address ~ "/",
                "URL de setup: http://" ~ ansible_default_ipv4.address ~ "/setup/"
              ),
          "Directorio: " ~ itop_web_root,
          "",
          (itop_configured.stat.exists
            | ternary(
                "CONFIGURACION: detectada (config-itop.php presente en web/conf/production)",
                "CONFIGURACION MANUAL REQUERIDA: 1) Accede al setup web 2) Ingresa credenciales RDS 3) Completa el wizard"
              )
          ),
          "================================================"
        ]
      }}
  tags: ['info']
